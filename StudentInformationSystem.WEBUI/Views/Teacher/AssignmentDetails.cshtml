@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@section Navbar{
    @await Html.PartialAsync("_navbarTSA.cshtml")
}
@model TeacherAssignmentViewModel



<form method="POST" asp-controller="Teacher" asp-action="AssignmentDetails" enctype="multipart/form-data">
    <div class="row">
        <div class="student-registration-div mb-4">
            <img src="~/images/_SIS.png" class="me-4" width=60px />
            <h1>
                <b>
                    Assignment Details
                </b>
            </h1>
             @if(Model.assignment.UpdatedDate != null && Model.assignment.UpdatedDate != "")
            {
                <div  id="LastUpdatedDiv" style="margin-left:auto;">
                    <input type="hidden" asp-for="@Model.assignment.UpdatedDate" 
                    id="IsAssignmentUpdated"/>
                    <label for="UpdatedDate" style="color:gray;">

                        Last Updated: @(Model.assignment.UpdatedDate.Substring(5,2) + "/" + 
                        Model.assignment.UpdatedDate.Substring(8) + "/" + 
                        Model.assignment.UpdatedDate.Substring(0,4)
                        + " " + Model.assignment.UpdatedTime)
                    </label>
                
                </div>
            }
        </div>
    </div>
    <div class="row" id="assignmentDiv">
        <div class="col-6">
            <input type="hidden" asp-for="@Model.assignment.AssignmentID" />
            <input type="hidden" asp-for="@Model.assignment.TeacherID"/>
            
            <div class="input-group p-2 mt-4">
                
                <select class="form-select me-3" id="AssignmentType" 
                asp-for="@Model.assignment.Type">
                    <option selected disabled> Assignment Type </option>
                    <option value="Homework">Homework</option>
                    <option value="Project">Project</option>
                    <option value="Quiz">Quiz</option>
                    <option value="Exam">Exam</option>
                </select>
             
                
                <select class="form-select" asp-for="@Model.assignment.StudentID">
                    <option selected disabled> Student </option>
                   @{
                        List<Student> TeacherStudents = new List<Student>();
                    }
                    @foreach (StudentTeacher privateLesson in Model.teacher.StudentTeachers)
                    {
                        int? studentID = privateLesson.StudentID;
                        if(studentID != null)
                        {
                            Student student = Model.students.FirstOrDefault(i=>i.StudentID == studentID)!;
                            Student? result = TeacherStudents.FirstOrDefault(i => i.StudentID == student.StudentID);
                            if(result == null)
                            {
                                TeacherStudents.Add(student);
                            }

                            
                        }

                    }
                    @foreach(Student st in TeacherStudents)
                    {
                        <option value="@st.StudentID">
                                @(st.Name + " " + st.Surname)

                        </option>
                    }
                </select>
               
                
                
            </div>
            <div class="form-group p-2">
                    <label for="LessonID">
                        Lesson ID
                    </label>
                    <input type="number" min="1"
                        id="LessonID" class="form-control" 
                    asp-for="@Model.assignment.privateLessonID" required/>
                </div>
            <div class="form-group p-2">
                <label for="AssignmentSubject">
                    Assignment Subject
                </label>
                <input type="text" id="AssignmentSubject" class="form-control" 
                asp-for="@Model.assignment.Subject" required/>
            </div>
            <div class="form-group p-2">
                <label for="AssignmentDetails">
                    Assignment Details
                </label>
                <textarea style="height:100px;" id="AssignmentDetails" class="form-control" 
                asp-for="@Model.assignment.Explanation" required></textarea>
            </div>
            <div class="form-group p-2" id="AssignmentFailedTopicsDiv">
                <label for="FailedTopics">
                    Assignment Failed Topic(s)
                </label>
                <textarea style="height: 100px;" id="FailedTopics" class="form-control"
                asp-for="@Model.assignment.FailedTopics"></textarea>
            </div>
           
            <div class="form-group p-2" id="deleteAssignmentID"> @*if assignment is graded
                teacher cannot delete the assignment*@
                <input type="hidden" asp-for="@Model.assignment.IsGraded" id="isAssignmentGraded"/>
                <input class="form-check-input me-2" type="checkbox" 
                id="deleteAssignment" asp-for="@Model.deleteAssignment"/>
                <label for="deleteAssignment">
                    Delete Assignment
                </label>

            </div>
            
        </div>
        <div class="col-6" style="margin-left:auto;">
            <div class="form-group p-2">
                <label for="AssignmentDueDate">
                    Due Date
                </label>
                <input type="date" id="AssignmentDueDate" class="form-control" 
                    asp-for="@Model.assignment.DueDate" required/>
            </div>
            <div class="form-group p-2">
                <label for="AssignmentDueTime">
                    Due Time
                </label>
                <input type="time" id="AssignmentDueTime" class="form-control"
                asp-for="@Model.assignment.DueTime" required/>
            </div>
            <div class="form-group p-2" id="AssignmentSubmissionDateDiv">
                <label for="AssignmentSubmissionDate">
                    Submitted Date
                </label>
                <input disabled type="date" class="form-control" id="AssignmentSubmissionDate" 
                    asp-for="@Model.assignment.SubmittedDate" />
            </div>
            <div class="form-group p-2" id="AssignmentSubmissionTimeDiv">
                <label for="AssignmentSubmissionTime">
                    Submission Time
                </label>
                <input disabled type="time" class="form-control" id="AssignmentSubmissionTime" 
                    asp-for="@Model.assignment.SubmittedTime"/>
            </div>
            <div class="form-group p-2">
                <label for="TeacherAssignmentDocument">
                   Assignment (Document)
                </label>
                <input type="file" itemid="TeacherAssignmentDocument" class="form-control" 
                asp-for="@Model.TeacherAssignmentFile" />
            </div>
            <div class="form-group p-2" id="TeacherAssignmentPdf">
            @*add a hidden input to send the Teacher assignment file path to the script*@
                <input type="hidden"
                    id="SendToScriptTeacherAssignmentFilePath" 
                    value="@Model.assignment.TeacherAssignmentFilePath"/>

                <a class="btn btn-primary me-3"  id="TeacherAssignmentFileOpenTag"  
                    style="border-radius:5px;border-color:darkslategray !important; 
                    color:darkslategray; background-color:white !important; "
                    target="_blank" href="@((Model.assignment.TeacherAssignmentFilePath != null && 
                    Model.assignment.TeacherAssignmentFilePath != "") 
                   ? Model.assignment.TeacherAssignmentFilePath:"")"> Open Assignment </a>

                <label>
                    @((Model.assignment.TeacherAssignmentFilePath != null && 
                    Model.assignment.TeacherAssignmentFilePath != "") 
                   ? Model.assignment.TeacherAssignmentFilePath.Substring(9):"")
                </label>
            </div>
            <div class="form-group p-2" id="StudentAssignmentPdf">
            @*add a hidden input to send the student assignment file path to the script*@
                <input type="hidden"
                    id="SendToScriptStudentAssignmentFilePath" 
                    value="@Model.assignment.StudentAssignmentFilePath"/>

                <a class="btn btn-primary me-3"  id="StudentAssignmentFileOpenTag"  
                    style="border-radius:5px;border-color:darkslategray !important; 
                    color:darkslategray; background-color:white !important; "
                    target="_blank" href="@((Model.assignment.StudentAssignmentFilePath != null && 
                    Model.assignment.StudentAssignmentFilePath != "") 
                   ? Model.assignment.StudentAssignmentFilePath:"")"> Student Assignment Answers </a>

                <label>
                    @((Model.assignment.StudentAssignmentFilePath != null && 
                    Model.assignment.StudentAssignmentFilePath != "") 
                   ? Model.assignment.StudentAssignmentFilePath.Substring(9):"")
                </label>
            </div>
            <div class="form-group p-2" id="assignmentGradeDiv">
                <label for="gradeAssignment">
                    Assignment Grade
                </label>
                <input type="hidden" asp-for="@Model.assignment.IsCompleted" id="SendToScriptIsAssignmentCompleted"/>
                <input type="number" min="0" max="100" class="form-control" id="gradeAssignment"
                asp-for="@Model.assignment.Grade" required/>
            </div>
        </div>
            <div class="row" style="align-content:center; justify-content:center;">
                <div class="col-6">
                    <div class="form-group p-2 mt-4 d-grid mb-5" id="UpdateAssignmentDiv">
                        <button type="submit" class="btn btn-primary btn-features">
                        Update Profile </button>
                    </div>
                </div>
            </div>
    </div>
</form>
<script>
document.addEventListener("DOMContentLoaded", function() {
    var StudentAssignmentFilePath = document.getElementById("SendToScriptStudentAssignmentFilePath").value;
    var StudentAssignmentFileDiv = document.getElementById("StudentAssignmentPdf")
    var TeacherAssignmentFilePath = document.getElementById("SendToScriptTeacherAssignmentFilePath").value;
    var TeacherAssignmentFileDiv = document.getElementById("TeacherAssignmentPdf");

    var IsAssignmentCompleted = document.getElementById("SendToScriptIsAssignmentCompleted").value;
    var assignmentGradeDiv = document.getElementById("assignmentGradeDiv");

    var IsAssignmentGraded = document.getElementById("isAssignmentGraded").value;
    const AssignmentDiv = document.getElementById("assignmentDiv");

    var AssignmentFailedTopicsDiv = document.getElementById("AssignmentFailedTopicsDiv");
    var DeleteAssignmentDiv = document.getElementById("deleteAssignmentID");

    var AssignmentSubmissionDateDiv = document.getElementById("AssignmentSubmissionDateDiv");
    var AssignmentSubmissionTimeDiv = document.getElementById("AssignmentSubmissionTimeDiv");

    var UpdateAssignmentButtonDiv = document.getElementById("UpdateAssignmentDiv");

    if (TeacherAssignmentFilePath) {
        TeacherAssignmentFileDiv.style.display = "block";
    }
    else 
    { 
        TeacherAssignmentFileDiv.style.display = "none";
    }
    if (StudentAssignmentFilePath) {
        StudentAssignmentFileDiv.style.display = "block";
    }
    else {
        StudentAssignmentFileDiv.style.display = "none";
    }

    if (IsAssignmentCompleted && IsAssignmentCompleted !== "false") 
    {     
        assignmentGradeDiv.style.display = "block";
        AssignmentFailedTopicsDiv.style.display = "block";
        AssignmentSubmissionDateDiv.style.display = "block";
        AssignmentSubmissionTimeDiv.style.display = "block";
        UpdateAssignmentButtonDiv.style.marginTop = "40px";

    }
    else
    
    {
        AssignmentFailedTopicsDiv.style.display = "none";
        assignmentGradeDiv.style.display = "none";
        AssignmentSubmissionDateDiv.style.display = "none";
        AssignmentSubmissionTimeDiv.style.display = "none";
        UpdateAssignmentButtonDiv.style.marginTop = "150px";
    }
    if (IsAssignmentGraded !== "false" && IsAssignmentGraded) {

       assignmentGradeDiv.style.display = "block";
       AssignmentFailedTopicsDiv.style.display = "block";
       DeleteAssignmentDiv.style.display = "none";

       const assignmentDivElements = assignmentDiv.querySelectorAll("input,button,select,textarea");
        assignmentDivElements.forEach(element => {
            element.disabled = true;
        });
    }
     
});
</script>