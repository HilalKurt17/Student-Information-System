@*Teacher cards design page*@
@using StudentInformationSystem.Entity

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model TeacherViewModel


<link href="~/css/TeacherStudentCards.css" rel="stylesheet" />
<div class="row">
    @*show logo and information about page*@
        <div class="student-registration-div mb-4">
            <img class="me-4" src="~/images/_SIS.png" width=60px; />
            <h1><b>
                Teacher List
            </b></h1>
        </div>
</div>
<div class="teacher-card-container-div">

    @foreach (var teacher in Model.teachers) @*create card for each teacher*@
    {
        var isTeacherApproved = teacher.IsApproved;
        var isTeacherCVTaken = (teacher.CVFilePath != null) && (teacher.CVFilePath != "");
        var isTeacherReferenceLetterTaken = false;
        if (teacher.References.Count != 0)
        {

            isTeacherReferenceLetterTaken = (teacher.References[0].ReferenceLetterFilePath != null) &&
                                            (teacher.References[0].ReferenceLetterFilePath != "");
        }
       
        var cardColorClass = "approved";
        if(isTeacherApproved == false)
        {
            if(isTeacherCVTaken && isTeacherReferenceLetterTaken)
            {
                cardColorClass = "pendingApprovement";
            }
            else
            {
                cardColorClass = "notApproved";
            }
            
        }
 
        <div class="card m-4 cards-display">
    <div class="card-header @cardColorClass"> @*card-headers consists of name and surname of the teacher*@

            <h5 class="card-title">
           <b> @teacher.Name @teacher.Surname
           </b> </h5>
            @*direct the admin to the teacher detail page for given id.*@
               <a class="btn"  
                   asp-controller="Admin"
                   asp-action="TeacherDetails"
                   asp-route-id="@teacher.TeacherID"
                   >Details</a>

        
    </div>
    <div class="body @cardColorClass"> @*create body part of the card. Inform the admin about teacher.
        Show summary of information about teacher.*@
        
            <div class="container-teacher-summary">
            <p > <b>Education Level:</b> @*show the education level
                of the teacher *@
                @teacher.EducationLevel</p>
            @*show teaching areas of the teacher*@
            <p class="display-inline">
                <b>Teaching Areas: </b></p>
            @if (@teacher.TeacherLessons != null
            && @teacher.TeacherLessons.Count() != 0)
            {
                @foreach(TeacherLesson lesson in @teacher.TeacherLessons)
                {
                    
                    if (lesson.IsChecked)
                    {
                       int lessonID = lesson.LessonID;
                       LessonDTO _lesson = Model.lessons.FirstOrDefault(l => l.LessonID == lessonID);
                       <p class="display-inline" style="display:inline-block;">• @_lesson.Name</p>
                    }
                    
                }
            }
            else
            {
                <span>Teaching areas are not defined.</span>
            }
            
            @*show teacher score of the teachers*@
                    @{
                        var width = @teacher.TeacherScore; 
                        // get teacher score
                        if (width == null)
                        {
                            width = 0;    
                        }
            } 
            <p><b>Teacher Score:</b>
            <div class="progress">
                <div class="progress-bar @cardColorClass
                progress-bar-striped
                progress-bar-animated" role="progressbar"
                style="width:@width%" aria-valuenow="75" 
                aria-valuemin="0" aria-valuemax="100"></div> 
            </div></p>
            
            </div>
       
    </div>
    
</div>
}
</div>

