@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@section Navbar{
    @await Html.PartialAsync("_navbarTSA.cshtml")
}
@model TeacherDetailsViewModel
    @{
    Layout = "_Layout";
    List<LessonDTO> lessons = Model.lessons;
}



<link href="~/css/TeacherDetailsPageDesign.css" rel="stylesheet"/>
@*show teacher details and update if required. To get IFormFile from the form, add enctype*@
<form asp-controller="Admin" asp-action="TeacherDetails" method="POST" enctype="multipart/form-data">
    <div class="row">
        <div class="student-registration-div mb-5">
            <img class="me-4" src="~/images/_SIS.png" width=100px; />
            <h1><b>
                TEACHER DETAILS
            </b></h1>
        </div>
    </div>
    <div class="row">
        <div class="col-6"> @*add teacher id as a hidden layer for model binding operation*@
            <input type="hidden" asp-for="@Model.teacher.TeacherID" />
            <div class="form-group p-2">
                <label for="Name">Name</label> 
                @*show teacher name (using model binding with asp-for)*@
                <input disabled asp-for="@Model.teacher.Name" class="form-control" />
            </div>
            <div class="form-group p-2">
                <label for="Surname">Surname</label> 
                @*show teacher surname (using model binding with asp-for)*@
                <input disabled asp-for="@Model.teacher.Surname" class="form-control" />
            </div>
            <div class="form-group p-2">
                <label for="Mail">Mail</label>
                @*show teacher mail (using model binding with asp-for)*@
                <input disabled asp-for="@Model.teacher.Mail" class="form-control" />
            </div>
            <div class="form-group p-2">
                <label for="Phone">Phone</label>
                @*show teacher phone (using model binding with asp-for)*@
                <input disabled asp-for="@Model.teacher.Phone" class="form-control" />
            </div>
            <div class="input-group p-2 mt-4">
                @*show teacher gender (using model binding with asp-for)*@
                <select disabled class="form-select me-3" asp-for="@Model.teacher.Gender"
                id="GenderSelection">
                    <option selected disabled> Gender </option>
                    <option value="F">Female</option>
                    <option value="M">Male</option>
                </select>
                @*show teacher education level (using model binding with asp-for)*@
                <select disabled class="form-select" asp-for="@Model.teacher.EducationLevel" 
                id="EducationLevel">
                    <option selected disabled> Education Level </option>
                    <option value="Undergraduate Student">Undergraduate Tutor</option>
                    <option value="B.Sc">B.Sc Tutor</option>
                    <option value="M.Sc">M.Sc Tutor</option>
                    <option value="PhD">PhD Tutor</option>
                </select>

            </div>
            <div class="form-group p-2 form-floating pt-4">
                @*show teacher details (using model binding with asp-for)*@
              <textarea disabled class="form-control"  
              id="TeacherExplanation" asp-for="@Model.teacher.Details"
              placeholder="Leave a comment here"></textarea>
              <label class="p-3 pt-4" for="TeacherExplanation">
                  Details
              </label>
            </div>

           <div class="form-group p-2">
                <label>Teaching Areas</label>
                @*show teacher teaching areas (using model binding with asp-for)*@
                <div class="div-teaching-subjects">
                    <div class="m-2 t-subject-div">
                        @for (int i = 0; i < Model.teacher.TeacherLessons.Count(); i++)
                        {
                            <input type="hidden" 
                            asp-for="@Model.teacher.TeacherLessons[i].LessonID">
                            <input type="hidden" 
                            asp-for="@Model.teacher.TeacherLessons[i].TeacherID">
                            int lesson_id = Model.teacher.TeacherLessons[i].LessonID;

                            <div class="form-check form-switch me-4">
                                <input disabled class="form-check-input me-2" type="checkbox"
                                id="TeacherLessons_@lesson_id" 
                                asp-for="@Model.teacher.TeacherLessons[i].IsChecked">
                                <label class="form-check-label" for="TeacherLessons_@lesson_id">
                                    @lessons[lesson_id-1].Name</label>
                            </div>
                            List<TeacherLesson> tll = Model.teacher.TeacherLessons;
                        }
                    </div>
                </div>
            </div>
           
        <div class="form-group p-2" >
            <div class="form-check">
                @*if teacher dismissed checkbox is clicked, delete the teacher from database*@
                <input class="form-check-input me-2" type="checkbox"
                id="dismissed"
                asp-for="@Model.teacher.UnenrollmentState"/>
                <label class="form-check-label" for="dismissed">
                    Dismissed
                </label>
            </div>
            
        </div>
        <div class="form-group p-2">
            <div class="form-check">
                @*if teacher CV and teacher Reference Mail is approved, click approved. Then teacher
                    can begin the private lessons.
                *@
                <input type="hidden" id="IsApprovedStatusSendToScript" 
                    value="@Model.teacher.IsApproved.ToString().ToLower()" />
                <input class="form-check-input me-2" type="checkbox" 
                id="isApproved"
                asp-for="@Model.teacher.IsApproved" />
                
                <label class="form-check-label" for="isApproved">
                    Confirm the Teacher
                </label>
            </div>
        </div>
    </div>
        <div class="col-6">
            
           <div class="form-group p-2">
                <label>Reference</label>
                @*show teacher Reference information*@
                <div class="card-div">
                    <input type="hidden" asp-for="@Model.teacher.References[0].ReferencesID" />
                    <div class="form-group p-2 pt-3">
                        <label for="ReferenceName">
                            Name 
                        </label>
                        <input disabled asp-for="@Model.teacher.References[0].Name" class="form-control" />
                    </div>
                    
                    <div class="form-group p-2">
                        <label for="ReferenceCompany">
                            Reference Company 
                        </label>
                        <input disabled asp-for="@Model.teacher.References[0].CompanyName" class="form-control" />
                    </div>
                    <div class="form-group p-2">
                        <label for="ReferenceJobTitle">
                            Job Title 
                        </label>
                        <input disabled asp-for="@Model.teacher.References[0].CurrentPosition" class="form-control" />
                    </div>
                    <div class="form-group p-2">
                        <label for="ReferenceMail" >
                            Mail
                        </label>
                        <input disabled asp-for="@Model.teacher.References[0].Mail" class="form-control" />
                    </div>
                    <div class="form-group p-2">
                        <label for="ReferencePhone" >
                            Phone
                        </label>
                        <input disabled asp-for="@Model.teacher.References[0].Phone" class="form-control" />
                    </div>
                    @*if reference letter is not provided, inform admin*@
                    <div class="alert alert-info p-2 mb-3 m-2" id="ReferenceLetterEmptyInfo"
                    style="padding-left: 10px;">
                        Reference Letter is not provided.
                    </div>
                        @*if reference letter is provided, admin can open the CV on a new web page and examine the CV
                            or download it
                        *@
                    <div class="form-group p-2 pt-4 pb-3" id="ReferenceFileOpenTag" 
                    style="margin-bottom: 5px; justify-content:center; align-items:center;">
                    @*add a hidden input for model binding with asp-for*@
                        <input type="hidden" class="form-control" 
                        id="ReferenceLetter" asp-for="@Model.ReferenceLetterFile">
                        @*add a hidden input to send the reference letter file path to the script*@
                        <input type="hidden" value="@Model.teacher.References[0].ReferenceLetterFilePath" 
                            id="SendToScriptReferenceLetterFilePath"/>
                            <a class="btn btn-primary me-3" style="border-radius:5px;
                        border-color:darkslategray !important; color:darkslategray; background-color:white !important; "
                        target="_blank"> Open Reference Letter </a>
                        <label>@((Model.teacher.References[0].ReferenceLetterFilePath != null && 
                            Model.teacher.References[0].ReferenceLetterFilePath != "")  ? 
                            Model.teacher.References[0].ReferenceLetterFilePath.Substring(9):"")
                        </label>
                    </div>
                </div>

            </div>
            <div class="alert alert-info p-2 m-2" id="CVFileEmptyInfo">
                CV is not provided.
            </div>
           @*if CV file is provided, open it in new web page*@
           <div class="form-group p-2" id="CVFileOpenTag">
               @*add a hidden input for model binding*@
               <input type="hidden" class="form-control" id="TeacherCV"
               asp-for="@Model.CVFile"/>
               @*add a hidden input to send CV file path to the script*@
               <input type="hidden" value="@Model.teacher.CVFilePath" id="SendToScriptCVFilePath"/>
               <a class="btn btn-primary me-3" style="border-radius:5px; 
                border-color:darkslategray !important; color:darkslategray; background-color:white !important;" 
               target="_blank"> Open CV </a>
               <label>@((Model.teacher.CVFilePath != null && Model.teacher.CVFilePath != "") 
                   ? Model.teacher.CVFilePath.Substring(9):"")</label>
           </div>
            <div class="form-group p-2 mt-5 d-grid">
                <button type="submit" class="btn btn-primary btn-features" 
                onclick="assignUnenrollmentDate()">
                Update </button>
            </div>
            
                
        </div>
    </div>
</form>


<script>
document.addEventListener("DOMContentLoaded", function() {
    
    var ReferenceLetterFilePath = document.getElementById("SendToScriptReferenceLetterFilePath").value;
    var CVFilePath = document.getElementById("SendToScriptCVFilePath").value;

    var RLEmptyInfo = document.getElementById("ReferenceLetterEmptyInfo");
    var CVEmptyInfo = document.getElementById("CVFileEmptyInfo");

    var RLInput = document.getElementById("ReferenceLetter");
    var CVInput = document.getElementById("TeacherCV");

    var CVhrefATag = document.getElementById("CVFileOpenTag");
    var RLhrefATag = document.getElementById("ReferenceFileOpenTag");

    if (!ReferenceLetterFilePath) {
        
        RLInput.disabled = false;
        RLhrefATag.style.display = "none";
        RLEmptyInfo.style.display = "block";
    }
    else {
        RLInput.disabled = true;
        RLhrefATag.href = ReferenceLetterFilePath;
        RLhrefATag.style.display = "inline-flex";
        RLEmptyInfo.style.display = "none";
    }
    if (!CVFilePath) {
        
        CVInput.disabled = false;
        CVhrefATag.style.display = "none";
        CVEmptyInfo.style.display = "block";
    }
    else{
        
        CVInput.disabled = true;
        CVhrefATag.href = CVFilePath;
        CVhrefATag.style.display = "inline";
        CVEmptyInfo.style.display = "none";
    }
    var isApprovedStatusInput = document.getElementById("IsApprovedStatusSendToScript");
    var isApprovedCheckbox = document.getElementById("isApproved");
    console.log(isApprovedStatusInput);
    if (isApprovedStatusInput.value == "true") {
        isApprovedCheckbox.disabled = true;
    };
});

</script>


